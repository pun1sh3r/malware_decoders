from pprint import pprint
import binascii
from glob import glob
import re
import sys


#:: sample: d1a8290523eddf2159a0f0d2ec5cff9e90646f11cd6bdade0a0c29b05aab2145'

def rc4(data, key):
    """RC4 encryption and decryption method."""
    S, j, out = list(range(256)), 0, []

    for i in range(256):
        j = (j + S[i] + key[i % len(key)]) % 256
        S[i], S[j] = S[j], S[i]

    i = j = 0
    for ch in data:
        i = (i + 1) % 256
        j = (j + S[i]) % 256
        S[i], S[j] = S[j], S[i]
        out.append(chr(ch ^ S[(S[i] + S[j]) % 256]))

    return "".join(out)

src_files = sys.argv[1]

c2_set = set()
for src_file in src_files:
    with open(src_file, 'rb') as fh:
        print(src_file.split('/')[8].replace('.exe',''))
        fh.seek(int('16628', 16))
        key = fh.read(16)
        fh.seek(int('16780',16))
        c2_data = fh.read(255)
        buf = rc4(c2_data,key)
        decoded_buf = str(buf.encode()).split(';')
        [c2_set.add(re.sub(r'b.*[\'\"]','', t.split(':')[0])) for t in decoded_buf if '\\x' not in  t ]

print('\n'.join(c2_set))
#print(byte_array)










